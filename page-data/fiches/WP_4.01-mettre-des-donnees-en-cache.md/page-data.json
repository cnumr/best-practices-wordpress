{"componentChunkName":"component---src-templates-fiches-display-js","path":"/fiches/WP_4.01-mettre-des-donnees-en-cache.md","result":{"data":{"markdownRemark":{"html":"<h2 id=\"sujet\" style=\"position:relative;\"><a href=\"#sujet\" aria-label=\"sujet permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sujet</h2>\nWordPress propose une fonction très intéressante qu'il est bon d'avoir en tête lorsqu'on développe une fonctionnalité spécifique qui nécessite d'afficher des données en \n            <a class=\"tooltip\" href=\"/lexique/front-office\" title=\"\">front\n            <span class=\"bottom\">\n            <span>\n\nPartie d'un site internet visible par les internautes\n</span>\n            <i></i>\n            </span>\n            </a>\n             : Les Transients ou données transitoires !\nUn transient est une \n            <a class=\"tooltip\" href=\"/lexique/api\" title=\"\">API\n            <span class=\"bottom\">\n            <span>\n\nInterface informatique agissant avec ou sur un service tier, signifiant Application programming interface ou « interface de programmation d'application »\n</span>\n            <i></i>\n            </span>\n            </a>\n             qui permet de mettre des données en \n            <a class=\"tooltip\" href=\"/lexique/cache\" title=\"\">cache\n            <span class=\"bottom\">\n            <span>\n\nMoyen de sauvegarder et de rappeler rapidement les données fréquemment utilisées\n</span>\n            <i></i>\n            </span>\n            </a>\n            .\nCette fonctionnalité permettra de mettre en cache les données qui sont réutilisées afin de limiter le nombre de \n            <a class=\"tooltip\" href=\"/lexique/requete\" title=\"\">requêtes\n            <span class=\"bottom\">\n            <span>\n\nInteroggation d'une base de données ou d'autres systèmes d'information\n</span>\n            <i></i>\n            </span>\n            </a>\n             permettant une optimisation de la rapidité de chargement du site qui sera aussi bénéfique pour son \n            <a class=\"tooltip\" href=\"/lexique/seo\" title=\"\">SEO\n            <span class=\"bottom\">\n            <span>\n\nSearch Engine Optimization, optimisation du référencement naturel\n</span>\n            <i></i>\n            </span>\n            </a>\n            .\n<p>Concrétement au chargement d'une page, WordPress vérifie si un transient existe.</p>\n<ul>\n<li>Si ce n'est pas le cas, il va chercher la donnée puis l'afficher.</li>\n<li>Si c'est le cas, il va directement afficher la donnée.</li>\n</ul>\n<p><strong>Tout n'est pas à mettre en cache !</strong></p>\n<p>Pour un maximum de gain, préférez utiliser cette méthode :</p>\n<ul>\n<li>pour des contenus complexes à générer</li>\n<li>pour un même contenu présent sur plusieurs pages</li>\n<li>ou pour un contenu qui ne changera plus (transient sans délai d'expiration)</li>\n</ul>\n<h2 id=\"greenit-vous-conseille\" style=\"position:relative;\"><a href=\"#greenit-vous-conseille\" aria-label=\"greenit vous conseille permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>GreenIT vous conseille</h2>\n<h3 id=\"solution-no-code-\" style=\"position:relative;\"><a href=\"#solution-no-code-\" aria-label=\"solution no code  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution no-code 🌱</h3>\nL'utilisation de l'\n            <a class=\"tooltip\" href=\"/lexique/api\" title=\"\">API\n            <span class=\"bottom\">\n            <span>\n\nInterface informatique agissant avec ou sur un service tier, signifiant Application programming interface ou « interface de programmation d'application »\n</span>\n            <i></i>\n            </span>\n            </a>\n             décrite ci-dessous reste une solution technique qui nécéssite de mettre les mains dans le code. Cependant, des extensions de système de cache peuvent plus ou moins finement gérer les données transitoires (voir la documentation de l'extension) sinon, des extensions complémentaires existent.\n<h3 id=\"solution-code-\" style=\"position:relative;\"><a href=\"#solution-code-\" aria-label=\"solution code  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Solution code 🌱🌱</h3>\n<p>L'API WordPress Transient s'utilise de la même manière que l'API Options. Elle ajoute cependant la notion de durée de vie. À noter qu'une donnée transitoire expirée reste en base de données et peut résulter d'une désinstallation d'extension ou de changement de thème.</p>\n<p>Si la liste des derniers articles est affichée sur plusieurs pages, nous pouvons par exemple enregistrer cette liste (et son code HTML) dans un Transient. Ainsi, lors de l'affichage de ce bloque, vous n'aurez qu'une requête à faire pour ce bloc, au lieu d'une boucle qui récupère les X derniers articles.</p>\n<p>Cette donnée transitoire pourra être remplacée lorsqu'un nouvel article sera ajouté.</p>\n<h2 id=\"exemple\" style=\"position:relative;\"><a href=\"#exemple\" aria-label=\"exemple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Exemple</h2>\n<p><strong>Sauvegarder une donnée transitoire</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">set_transient</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$transient</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$expiration</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>Récupérer une donnée transitoire</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span> <span class=\"token constant boolean\">false</span> <span class=\"token operator\">===</span> <span class=\"token punctuation\">(</span> <span class=\"token variable\">$valeur</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_transient</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$transient</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token variable\">$valeur</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>Supprimer une donnée transitoire</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token function\">delete_transient</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$transient</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"principe-de-validation\" style=\"position:relative;\"><a href=\"#principe-de-validation\" aria-label=\"principe de validation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Principe de validation</h2>\n<table>\n<thead>\n<tr>\n<th>Le nombre</th>\n<th align=\"center\">est supérieur ou égal à</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>de requêtes évitées</td>\n<td align=\"center\">70%</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"source\" style=\"position:relative;\"><a href=\"#source\" aria-label=\"source permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Source</h2>\n<ul>\n<li><a href=\"https://developer.wordpress.org/apis/handbook/transients/\">https://developer.wordpress.org/apis/handbook/transients/ (EN)</a></li>\n</ul>","rawMarkdownBody":"\n## Sujet\n\nWordPress propose une fonction très intéressante qu'il est bon d'avoir en tête lorsqu'on développe une fonctionnalité spécifique qui nécessite d'afficher des données en [[front-office|front]] : **Les Transients ou données transitoires !**\n\nUn transient est une [[api|API]] qui permet de mettre des données en [[cache]].\nCette fonctionnalité permettra de mettre en cache les données qui sont réutilisées afin de limiter le nombre de [[requete|requêtes]] permettant une optimisation de la rapidité de chargement du site qui sera aussi bénéfique pour son [[seo|SEO]].\n\nConcrétement au chargement d'une page, WordPress vérifie si un transient existe.\n\n- Si ce n'est pas le cas, il va chercher la donnée puis l'afficher.\n- Si c'est le cas, il va directement afficher la donnée.\n\n**Tout n'est pas à mettre en cache !**\n\nPour un maximum de gain, préférez utiliser cette méthode :\n\n- pour des contenus complexes à générer\n- pour un même contenu présent sur plusieurs pages\n- ou pour un contenu qui ne changera plus (transient sans délai d'expiration)\n\n## GreenIT vous conseille\n\n### Solution no-code 🌱\n\nL'utilisation de l'[[api|API]] décrite ci-dessous reste une solution technique qui nécéssite de mettre les mains dans le code. Cependant, des extensions de système de cache peuvent plus ou moins finement gérer les données transitoires (voir la documentation de l'extension) sinon, des extensions complémentaires existent.\n\n### Solution code 🌱🌱\n\nL'API WordPress Transient s'utilise de la même manière que l'API Options. Elle ajoute cependant la notion de durée de vie. À noter qu'une donnée transitoire expirée reste en base de données et peut résulter d'une désinstallation d'extension ou de changement de thème.\n\nSi la liste des derniers articles est affichée sur plusieurs pages, nous pouvons par exemple enregistrer cette liste (et son code HTML) dans un Transient. Ainsi, lors de l'affichage de ce bloque, vous n'aurez qu'une requête à faire pour ce bloc, au lieu d'une boucle qui récupère les X derniers articles.\n\nCette donnée transitoire pourra être remplacée lorsqu'un nouvel article sera ajouté.\n\n## Exemple\n\n**Sauvegarder une donnée transitoire**\n\n```php\nset_transient( $transient, $value, $expiration );\n```\n\n**Récupérer une donnée transitoire**\n\n```php\nif ( false === ( $valeur = get_transient($transient) ) ) {\n  echo $valeur;\n}\n```\n\n**Supprimer une donnée transitoire**\n\n```php\ndelete_transient( $transient );\n```\n\n## Principe de validation\n\n| Le nombre           | est supérieur ou égal à |\n| ------------------- | :---------------------: |\n| de requêtes évitées |           70%           |\n\n## Source\n- [https://developer.wordpress.org/apis/handbook/transients/ (EN)](https://developer.wordpress.org/apis/handbook/transients/)\n","excerpt":"Sujet Concrétement au chargement d'une page, WordPress vérifie si un transient existe. Si ce n'est pas le cas, il va chercher la donnée puis…","timeToRead":2,"tableOfContents":"<ul>\n<li>\n<p><a href=\"#sujet\">Sujet</a></p>\n</li>\n<li>\n<p><a href=\"#greenit-vous-conseille\">GreenIT vous conseille</a></p>\n<ul>\n<li><a href=\"#solution-no-code-\">Solution no-code 🌱</a></li>\n<li><a href=\"#solution-code-\">Solution code 🌱🌱</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#exemple\">Exemple</a></p>\n</li>\n<li>\n<p><a href=\"#principe-de-validation\">Principe de validation</a></p>\n</li>\n<li>\n<p><a href=\"#source\">Source</a></p>\n</li>\n</ul>","frontmatter":{"title":"4.01 Mettre des données en cache","lifecycle":"Intégration & Développement","environmental_impact":"Moyen 🌱🌱","scope":"Cache","people":"Dominique N.","priority_implementation":"Moyen 👍👍","saved_resources":["Requêtes"],"responsible":["Code(use·ur) → Développeu·se·r"]}},"file":{"id":"86d80c8a-f6d0-529a-8ee8-a6173debbc59"},"previous":{"frontmatter":{"title":"3.12 Utiliser le constructeur de pages Gutenberg","path":"/fiches/WP_3.12-utiliser-le-constructeur-de-pages-gutenberg"}},"next":{"frontmatter":{"title":"4.02 Augmenter l'intervalle de temps entre deux enregistrements automatiques","path":"/fiches/WP_4.02-augmenter-l_intervalle-de-temps-entre-deux-enregistrements-automatiques"}}},"pageContext":{"id":"86d80c8a-f6d0-529a-8ee8-a6173debbc59","remarkID":"529dec4c-b312-5727-b0f1-184008a3d7ff","type":"fiches","previousPostId":"d8bb38d2-227e-5e07-9e4d-140fa7a2616d","nextPostId":"46e3d03b-8644-57d2-a3bf-90b38972c1be"}},"staticQueryHashes":["2893162066","394120871"]}